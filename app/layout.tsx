import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import "./styles/globals.css";
import Header from "./components/Header";
import { Toaster } from "react-hot-toast";
import { createClient } from "@/utils/supabase/ssr_client/server";
import { QueryProvider } from "./providers/QueryProvider";
import { ReactQueryDevtools } from "@tanstack/react-query-devtools";

const geistSans = localFont({
	src: "./fonts/GeistVF.woff",
	variable: "--font-geist-sans",
	weight: "100 900",
});
const geistMono = localFont({
	src: "./fonts/GeistMonoVF.woff",
	variable: "--font-geist-mono",
	weight: "100 900",
});

export const metadata: Metadata = {
	title: "Create Next App",
	description: "Generated by create next app",
};

export default async function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode;
}>) {
	// This is the root layout for your Next.js application.

	const supabase = await createClient();
	const {
		data: { user },
		error,
	} = await supabase.auth.getUser();

	if (error) {
		console.error("Error fetching user:", error);
	}
	if (!user) {
		console.warn("No user found, redirecting to login.");
	}

	return (
		<html lang="en">
			<body
				className={`${geistSans.variable} ${geistMono.variable} antialiased`}
			>
				<QueryProvider>
					<Toaster />
					<Header user={user} />
					<div className="min-h-screen bg-[#f0f8ff] pl-[37px]">{children}</div>
					{process.env.NODE_ENV === "development" && (
						<ReactQueryDevtools initialIsOpen={false} />
					)}
				</QueryProvider>
			</body>
		</html>
	);
}
